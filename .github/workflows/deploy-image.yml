
name: Node CI

on:
  push:
    branches:
      - "**"
    tags:
      - "v**"
  pull_request:

jobs:
  lint-core:
    name: Typecheck and Lint Core
    runs-on: ubuntu-latest
    continue-on-error: true
    timeout-minutes: 15
    steps:
      - uses: actions/checkout@v2
      - uses: ./.github/actions/setup-meteor
      - name: restore node_modules
        uses: actions/cache@v2
        with:
          path: |
            meteor/node_modules
          key: ${{ runner.os }}-${{ hashFiles('meteor/package-lock.json') }}-${{ hashFiles('meteor/.meteor/release') }}
      - name: Prepare Environment
        run: |
          yarn
          yarn build:packages
        env:
          CI: true
      - name: Run typecheck and linter
        run: |
          cd meteor
          meteor npm run ci:lint
        env:
          CI: true
# name: Node CI
# on:
#   push:
#     branches:
#       - '**'
#     tags:
#       - 'v**'
#   workflow_dispatch:

# jobs:
#   test-lint-core:
#     runs-on: ubuntu-latest
#     container: sofietv/tv-automation-meteor-base:1.11.1
#     steps:
#       - name: Checkout
#         uses: actions/checkout@v2 
#       - name: Npm install & build libs
#         run: cd meteor && meteor npm install && meteor npm run ci:prepare

#       - name: Run tests and send coverage
#         run: cd meteor && meteor npm run ci

#       - name: Typecheck and lint code
#         run: cd meteor && meteor npm run ci:lint

#   test-lint-libs:
#     runs-on: ubuntu-latest
#     container: circleci/node:12
#     steps:
#       - name: Checkout
#         uses: actions/checkout@v2 

#       - name: cd packages && yarn install
#         run: cd packages && yarn install

#       - name: Run linter blueprints-integration
#         run: cd packages/blueprints-integration && yarn lint

#       - name: Run linter server-core-integration
#         run: cd packages/server-core-integration && yarn lint

#       - name: Run tests blueprints-integration
#         run: cd packages/blueprints-integration && yarn unit && yarn send-coverage

#       - name: Run tests server-core-integration
#         run: cd packages/server-core-integration && yarn unit && yarn send-coverage